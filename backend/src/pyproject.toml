[project]
name = "review-genie-backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13.0"
dependencies = [
    "aiohttp>=3.12.14",
    "alembic>=1.16.4",
    "asyncpg>=0.30.0",
    "fastapi>=0.116.1",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.35.0",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "mypy>=1.9.0",
    "ruff>=0.8.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["domain", "application", "adapters"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.13"
mypy_path = "."
packages = ["domain", "application", "adapters"]
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 88
target-version = "py313"
src = ["."]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-argument
    "ARG002", # unused-method-argument
    "ARG003", # unused-class-method-argument
    "ARG004", # unused-static-method-argument
    "ARG005", # unused-lambda-argument
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP", # pyupgrade
    "RUF", # Ruff-specific rules
]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in `__init__`
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = [
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    "ARG001", "ARG002", "ARG003", "ARG004", "ARG005",
]

[tool.ruff.lint.isort]
known-first-party = ["domain", "application", "adapters"]

[tool.ruff.lint.pydocstyle]
convention = "google"
